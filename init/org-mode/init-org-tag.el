;;; init-org-tag.el --- init for Org Tags
;;; -*- coding: utf-8 -*-

;;; Commentary:



;;; Code:


;;; Tags

(setq org-auto-align-tags nil)

(setq org-tag-persistent-alist
      '(("ARCHIVE" . ?A)
        ("noexport" . ?E)
        ("private" . ?P)
        ("deprecated" . ?D)
        ("outdated" . ?O)))

;; auto add tag "LOG" for [C-c C-z] add log note.
(add-to-list 'org-tag-persistent-alist '("LOG"))
(defun my/org-add-note--auto-add-tag ()
  "Auto add tag 'NOTE' when add note log."
  (org-back-to-heading)
  ;; remove multiple same "LOG" tags
  (autoload 'seq-uniq "seq.el")
  (org-set-tags (seq-uniq (cons "LOG" (org-get-tags nil t)))))
(advice-add 'org-add-note :after #'my/org-add-note--auto-add-tag)

;;; for Org Book reading journal. Mark an headline as a book
(add-to-list 'org-tag-persistent-alist '("book" . ?h))
(add-to-list 'org-default-properties "AUTHOR")
(add-to-list 'org-default-properties "PUBLISH_DATE")
(add-to-list 'org-default-properties "PRESS")

(setq org-tag-alist
      '((:startgroup) ("Org" . ?o) ("translation" . ?t) ("idea" . ?i) ("suggested") (:endgroup)

        ;; Task
        (:startgrouptag) ("@task" . nil) (:grouptags)
        ("event") ("check") ("alert") ("flag") ("tag") ("question") ("info") ("quote")
        ("star") ("heart") ("smile") ("like") ("trash")
        ("lock") ("unlock") ("key")
        ("refresh") ("repeat") ("inprogress") ("fragment")
        (:endgrouptag)
        
        ;; Life
        (:startgrouptag) ("@life" . nil) (:grouptags)
        ("talk") ("call") ("shopping") ("express")
        ("finance") ("money") ("credit_card") ("PayPal") ("btc")
        ("bee") ("coffee")
        ("hospital") ("medical") ("health")
        ("law") ("government") ("censorship") ("complaint")
        ("watch") ("book" . ?h) ("bookmark" . ?b) ("note") ("paperclip")
        ("file") ("archive") ("document") ("word") ("excel") ("powerpoint") ("pdf")
        ("image") ("video") ("audio")
        ("search") ("download") ("email") ("reply") ("share") ("rss")
        ("map") ("location")
        ("picture") ("music") ("film") ("headphone") ("game")
        ("camera") ("vlog") ("record")
        ("chart")
        ("bicycle") ("car") ("bus") ("subway") ("plane")
        ("travel")
        ("child")
        (:endgrouptag)
        
        ;; SEX
        (:startgrouptag) ("@SEX" . ?X) (:grouptags)
        ("date") ("pickup")
        (:endgrouptag)
        ;; Time
        (:startgroup) ("today" . nil) ("tomorrow" . nil) ("future" . nil) (:endgroup)
        ;; Places
        (:startgroup) ("company") ("home") (:endgroup)
        ;; Devices
        (:startgroup)
        ("computer") ("laptop") ("mobile")
        ("firefox") ("chrome")
        (:endgroup)
        ;; Work
        (:startgrouptag) ("@work" . ?w) (:grouptags)
        ("appointment" . ?a) ("meeting" . ?m) ("urgent" . ?u)
        (:endgrouptag)
        
        (:startgrouptag) ("@wiki" . ?k) (:grouptags)
        ("thought") ("philosophy") ("psychology") ("literature")
        ("computer_science") ("math")
        ("strategies")
        ("science") ("finance") ("business") ("economy")
        ("history") ("politics") ("society")
        ("medicine")
        (:endgrouptag)
        
        (:startgrouptag) ("@programming") (:grouptags)
        ("code" . ?C) ("source_code") ("bug") ("Emacs" . ?e) ("git" . ?G) ("GitHub") ("GitLab")
        (:startgroup)
        ("hardware") ("usb") ("disk") ("terminal") ("cloud") ("DevOps") ("docker")
        ("security")
        ("Linux" . ?L) ("Apple") ("macOS") ("Windows" . ?W) ("Android") ("iOS")
        ("LISP" . ?l) ("Common_Lisp") ("Clojure" . ?c) ("ClojureScript" . ?s)
        ("Java" . ?j) ("C") ("cpp") ("Go") ("Rust") ("Swift") ("C#" . ?#)
        ("Shell" . ?S) ("Python" . ?p) ("Ruby" . ?r)
        ("JavaScript" . ?J) ("HTML") ("HTML5") ("CSS") ("CSS3")
        ("database" . ?d) ("SQL") ("PostgreSQL") ("MySQL") ("MariaDB") ("Oracle") ("SQLite") ("DB2")
        ("TeX") ("LaTeX") ("Markdown") ("reStructuredText") ("AsciiDoc") ("YAML") ("TOML") ("CWL")
        ;; Internet
        ("Internet") ("Google") ("Facebook") ("Twitter") ("Microsoft") ("Amazon")
        ("Tencent")
        (:endgroup)
        (:endgrouptag)
        
        (:startgroup)
        (:startgrouptag) ("@family") (:grouptags)
        ("sister") ("father") ("mother")
        (:endgrouptag)
        (:startgrouptag) ("@relative") (:endgrouptag)
        (:startgrouptag) ("@girlfriend") (:endgrouptag)
        (:startgrouptag) ("@workmate") (:endgrouptag)
        (:startgrouptag) ("@friend") (:grouptags)
        ("good_friend") ("friend") ("person_who_knows")
        (:endgrouptag)
        (:endgroup)
        
        (:startgrouptag) ("@project") (:grouptags)
        ("agriculture")
        (:endgrouptag)
        
        (:startgrouptag) ("@company") (:grouptags)
        ("users") ("promotion") ("copyright")
        (:endgrouptag)
        ))

(setq org-tag-faces
      '(("noexport" :foreground "DimGray" :weight bold :underline t :strike-through t)
        ("deprecated" :foreground "DimGray" :strike-through t)
        ("LOG" :foreground "DeepSkyBlue")
        ("private" :foreground "deep pink")
        ("book" :foreground "deep pink")
        ("fragment" :foreground "LightGray" :weight bold)
        ("computer" :foreground "green")
        ("@life" :foreground "black")
        ("@work" :foreground "DeepSkyBlue")
        ("@SEX" :foreground "deep pink" :weight bold)
        ("@Programming" :foreground "lawn green" :weight bold)
        ("Linux" :foreground "yellow" :weight bold)
        ("Mac" :foreground "#444444" :weight bold)
        ("Emacs" :foreground "dodger blue" :weight bold)
        ("Org" :foreground "green yellow" :weight bold)
        ("Hacker" :foreground "OrangeRed" :weight bold)
        ("LISP" :foreground "deep pink" :weight bold)
        ("Common_Lisp" :foreground "sky blue" :weight bold)
        ("Clojure" :foreground "sky blue" :weight bold)
        ("ClojureScript" :foreground "sky blue" :weight bold)
        ("Python" :foreground "yellow" :weight bold)
        ("Ruby" :foreground "red" :weight bold)
        ("Shell" :foreground "sea green")
        ("Java" :foreground "royal blue" :weight bold)
        ("C" :foreground "SaddleBrown" :weight bold)
        ("Go" :foreground "gold" :weight bold)
        ("Rust" :foreground "WhiteSmoke" :weight bold)
        ("JavaScript" :foreground "yellow" :weight bold)))

;; ;;; `org-archive-tag', `org-archived'
;; (defconst org-deprecated-tag "deprecated"
;;   "The tag that marks a subtree as archived.
;; An archived subtree does not open during visibility cycling, and does
;; not contribute to the agenda listings.")
;;
;; (defface org-deprecated '((t :inherit shadow))
;;   "Face for headline with the deprecated tag."
;;   :group 'org-faces)

;;; [ org-pretty-tags ] -- Surrogates for Org tags.

(use-package org-pretty-tags
  :ensure t
  :defer t
  :after org
  :delight org-pretty-tags-mode
  :commands (org-pretty-tags-mode org-pretty-tags-global-mode)
  :hook (after-init . org-pretty-tags-global-mode)
  :init (setq org-tag-faces nil)
  :config
  (setq org-pretty-tags-surrogate-strings
        `(("ARCHIVE" . ,(all-the-icons-faicon "archive"))
          ("noexport" . ,(all-the-icons-faicon "ban"))
          ("deprecated" . ,(all-the-icons-faicon "bell-slash-o"))
          ("crypt" . ,(all-the-icons-faicon "lock"))
          ("private" . ,(all-the-icons-faicon "eye-slash"))
          ("suggested" . ,(all-the-icons-faicon "thumbs-o-up"))
          ("idea" . ,(all-the-icons-faicon "lightbulb-o"))
          ("translation" . ,(all-the-icons-faicon "language"))
          ;; -----------------------------------------------------
          ("Org" . ,(all-the-icons-fileicon "org"))
          ("Emacs" . ,(all-the-icons-fileicon "emacs"))
          ("Wiki" . ,(all-the-icons-fileicon "mediawiki"))
          ;; -----------------------------------------------------
          ("LOG" . ,(all-the-icons-faicon "comment-o"))
          ("event" . ,(all-the-icons-faicon "calendar-check-o"))
          ("check" . ,(all-the-icons-faicon "check-square-o"))
          ("alert" . ,(all-the-icons-faicon "bell-o"))
          ("flag" . ,(all-the-icons-faicon "flag-o"))
          ("tag" . ,(all-the-icons-fileicon "tag"))
          ("question" . ,(all-the-icons-faicon "question-circle-o"))
          ("info" . ,(all-the-icons-faicon "info-circle"))
          ("quote" . ,(all-the-icons-faicon "quote-left"))
          ("lock" . ,(all-the-icons-faicon "lock"))
          ("unlock" . ,(all-the-icons-faicon "unlock"))
          ("key" . ,(all-the-icons-faicon "key"))
          ("refresh" . ,(all-the-icons-faicon "refresh"))
          ("repeat" . ,(all-the-icons-faicon "repeat"))
          ("star" . ,(all-the-icons-faicon "star"))
          ("heart" . ,(all-the-icons-faicon "heart-o"))
          ("brain" . ,(all-the-icons-fileicon "brain"))
          ("smile" . ,(all-the-icons-faicon "smile-o"))
          ("like" . ,(all-the-icons-faicon "thumbs-o-up"))
          ("trash" . ,(all-the-icons-faicon "trash-o"))
          ("inprogress" . ,(all-the-icons-faicon "spinner"))
          ;; -----------------------------------------------------
          ;; Life
          ;; ("@life" . ,(all-the-icons-faicon ""))
          ("talk" . ,(all-the-icons-faicon "comments-o"))
          ("call" . ,(all-the-icons-faicon "phone-square"))
          ("@SEX" . ,(all-the-icons-faicon "female"))
          ("female" . ,(all-the-icons-faicon "female"))
          ("male" . ,(all-the-icons-faicon "male"))
          ("neuter" . ,(all-the-icons-faicon "neuter"))
          ("venus" . ,(all-the-icons-faicon "venus"))
          ("venus_double" . ,(all-the-icons-faicon "venus-double"))
          ("venus_mars" . ,(all-the-icons-faicon "venus-mars"))
          ("meal" . ,(all-the-icons-faicon "cutlery"))
          ("home" . ,(all-the-icons-faicon "home"))
          ("repair" . ,(all-the-icons-faicon "wrench"))
          ("shopping" . ,(all-the-icons-faicon "shopping-cart"))
          ("express" . ,(all-the-icons-faicon "truck"))
          ("money" . ,(all-the-icons-faicon "money"))
          ("credit_card" . ,(all-the-icons-faicon "credit-card-alt"))
          ("visa" . ,(all-the-icons-faicon "cc-visa"))
          ("mastercard" . ,(all-the-icons-faicon "cc-mastercard"))
          ("PayPal" . ,(all-the-icons-faicon "paypal"))
          ("stripe" . ,(all-the-icons-faicon "cc-stripe"))
          ("gratipay" . ,(all-the-icons-faicon "gratipay"))
          ("btc" . ,(all-the-icons-faicon "btc"))
          ("watch" . ,(all-the-icons-faicon "eye"))
          ("hospital" . ,(all-the-icons-faicon "hospital-o"))
          ("doctor" . ,(all-the-icons-faicon "stethoscope"))
          ("doctor" . ,(all-the-icons-faicon "user-md"))
          ("medical" . ,(all-the-icons-faicon "medkit"))
          ("health" . ,(all-the-icons-faicon "medkit"))
          ("law" . ,(all-the-icons-faicon "gavel"))
          ("government" . ,(all-the-icons-faicon "building-o"))
          ("censorship" . ,(all-the-icons-faicon "assistive-listening-systems"))
          ("complaint" . ,(all-the-icons-faicon "bullhorn"))
          ("map" . ,(all-the-icons-faicon "map"))
          ("map_pin" . ,(all-the-icons-faicon "map-pin"))
          ("street_view" . ,(all-the-icons-faicon "street-view"))
          ("location" . ,(all-the-icons-faicon "map-marker")) ; "location-arrow", "map-o", "map-pin", "map-signs"
          ("bee" . ,(all-the-icons-faicon "beer"))
          ("coffee" . ,(all-the-icons-faicon "coffee"))
          ("bicycle" . ,(all-the-icons-faicon "bicycle"))
          ("car" . ,(all-the-icons-faicon "car"))
          ("bus" . ,(all-the-icons-faicon "bus"))
          ("taxi" . ,(all-the-icons-faicon "taxi"))
          ("subway" . ,(all-the-icons-faicon "subway"))
          ("plane" . ,(all-the-icons-faicon "plane"))
          ("travel" . ,(all-the-icons-faicon "suitcase"))
          ("child" . ,(all-the-icons-faicon "child"))
          ("recycle" . ,(all-the-icons-faicon "recycle"))
          ;; -----------------------------------------------------
          ("file" . ,(all-the-icons-faicon "file-text-o"))
          ("archive" . ,(all-the-icons-faicon "file-archive-o"))
          ("document" . ,(all-the-icons-faicon "file-text-o"))
          ("Markdown" . ,(all-the-icons-fileicon "markdownlint"))
          ("AsciiDoc" . ,(all-the-icons-fileicon "asciidoc"))
          ("OneNote" . ,(all-the-icons-fileicon "onenote"))
          ("word" . ,(all-the-icons-fileicon "word"))
          ("excel" . ,(all-the-icons-fileicon "excel"))
          ("powerpoint" . ,(all-the-icons-fileicon "powerpoint"))
          ("keynote" . ,(all-the-icons-fileicon "keynote"))
          ("access" . ,(all-the-icons-fileicon "access"))
          ("image" . ,(all-the-icons-faicon "file-image-o"))
          ("video" . ,(all-the-icons-faicon "file-video-o"))
          ("audio" . ,(all-the-icons-faicon "file-audio-o"))
          ("pdf" . ,(all-the-icons-faicon "file-pdf-o"))
          ("book" . ,(all-the-icons-faicon "book"))
          ("bookmark" . ,(all-the-icons-faicon "bookmark"))
          ("plot" . ,(all-the-icons-faicon "bar-chart"))
          ("diagram" . ,(all-the-icons-faicon "line-chart"))
          ("line_chart" . ,(all-the-icons-faicon "line-chart"))
          ("area_chart" . ,(all-the-icons-faicon "area-chart"))
          ("pie_chart" . ,(all-the-icons-faicon "pie-chart"))
          ("note" . ,(all-the-icons-faicon "pencil"))
          ("paperclip" . ,(all-the-icons-faicon "paperclip"))
          ("search" . ,(all-the-icons-faicon "search"))
          ("download" . ,(all-the-icons-faicon "download"))
          ("email" . ,(all-the-icons-faicon "envelope-o"))
          ("reply" . ,(all-the-icons-faicon "reply"))
          ("share" . ,(all-the-icons-faicon "share-square-o"))
          ("rss" . ,(all-the-icons-faicon "rss"))
          ("picture" . ,(all-the-icons-faicon "picture-o"))
          ("music" . ,(all-the-icons-faicon "music"))
          ("headphone" . ,(all-the-icons-faicon "headphones"))
          ("film" . ,(all-the-icons-faicon "film"))
          ("game" . ,(all-the-icons-faicon "gamepad"))
          ("steam" . ,(all-the-icons-faicon "steam"))
          ("camera" . ,(all-the-icons-faicon "camera-retro"))
          ("vlog" . ,(all-the-icons-fileicon "video"))
          ("record" . ,(all-the-icons-faicon "microphone"))
          ("news" . ,(all-the-icons-faicon "newspaper-o"))
          ;; -----------------------------------------------------
          ;; Work
          ("work" . ,(all-the-icons-faicon "black-tie"))
          ("print" . ,(all-the-icons-faicon "print"))
          ("business_trip" . ,(all-the-icons-faicon "briefcase"))
          ;; -----------------------------------------------------
          ;; Programming
          ("@programming" . ,(all-the-icons-faicon "code"))
          ("code" . ,(all-the-icons-faicon "code"))
          ("source_code" . ,(all-the-icons-faicon "file-code-o"))
          ("bug" . ,(all-the-icons-faicon "bug"))
          ("patch" . ,(all-the-icons-fileicon "patch"))
          ("diff" . ,(all-the-icons-fileicon "diff"))
          ("coding" . ,(all-the-icons-faicon "keyboard-o"))
          ("regex" . ,(all-the-icons-fileicon "regex"))
          ("git" . ,(all-the-icons-faicon "git"))
          ("database" . ,(all-the-icons-faicon "database"))
          ("computer" . ,(all-the-icons-faicon "laptop"))
          ("laptop" . ,(all-the-icons-faicon "laptop"))
          ("mobile" . ,(all-the-icons-faicon "mobile"))
          ("phone" . ,(all-the-icons-faicon "phone"))
          ("fax" . ,(all-the-icons-faicon "fax"))
          ("TV" . ,(all-the-icons-faicon "television"))
          ("cmcc" . ,(all-the-icons-fileicon "ecere")) ; CMCC 中国移动
          ("hardware" . ,(all-the-icons-faicon "desktop"))
          ("robot" . ,(all-the-icons-fileicon "robot"))
          ("usb" . ,(all-the-icons-faicon "usb"))
          ("WiFi" . ,(all-the-icons-faicon "wifi"))
          ("Nvidia" . ,(all-the-icons-fileicon "nvidia"))
          ("Firefox" . ,(all-the-icons-faicon "firefox"))
          ("Chrome" . ,(all-the-icons-faicon "chrome"))
          ("Edge" . ,(all-the-icons-fileicon "edge"))
          ("terminal" . ,(all-the-icons-faicon "terminal"))
          ("powershell" . ,(all-the-icons-fileicon "powershell"))
          ("CMake" . ,(all-the-icons-fileicon "cmake"))
          ("Tcl" . ,(all-the-icons-fileicon "tcl"))
          ("Jupyter" . ,(all-the-icons-fileicon "jupyter"))
          ("Finder" . ,(all-the-icons-fileicon "finder"))
          ("FFmpeg" . ,(all-the-icons-fileicon "ffmpeg"))
          ("Cloud" . ,(all-the-icons-faicon "cloud"))
          ("DevOps" . ,(all-the-icons-faicon "cogs")) ; "sitemap"
          ("Docker" . ,(all-the-icons-fileicon "dockerfile"))
          ("Vagrant" . ,(all-the-icons-fileicon "vagrant"))
          ("Ansible" . ,(all-the-icons-fileicon "ansible"))
          ("Puppet" . ,(all-the-icons-fileicon "puppet"))
          ("Terraform" . ,(all-the-icons-fileicon "terraform"))
          ("Nix" . ,(all-the-icons-fileicon "nix"))
          ("security" . ,(all-the-icons-faicon "shield"))
          ("hacker" . ,(all-the-icons-faicon "user-secret"))
          ("Nmap" . ,(all-the-icons-fileicon "nmap"))
          ("disk" . ,(all-the-icons-faicon "hdd-o"))
          ("Arduino" . ,(all-the-icons-fileicon "arduino"))
          ("Processing" . ,(all-the-icons-fileicon "processing"))
          ("Godot" . ,(all-the-icons-fileicon "godot"))
          ;; -----------------------------------------------------
          ;; Softwares
          ("Nginx" . ,(all-the-icons-fileicon "nginx"))
          ("Apache" . ,(all-the-icons-alltheicon "apache"))
          ("libuv" . ,(all-the-icons-fileicon "libuv"))
          ("LLVM" . ,(all-the-icons-fileicon "llvm"))
          ("GDB" . ,(all-the-icons-fileicon "gdb"))
          ("font" . ,(all-the-icons-faicon "font"))
          ("Electron" . ,(all-the-icons-fileicon "electron"))
          ("Xamarin" . ,(all-the-icons-fileicon "xamarin"))
          ("Ionic" . ,(all-the-icons-fileicon "ionic-project"))
          ;; Adobe softwares
          ("AdobePhotoshop" . ,(all-the-icons-fileicon "ps"))
          ("AdobePremiere" . ,(all-the-icons-fileicon "premiere"))
          ("AdobeAfterEffect" . ,(all-the-icons-fileicon "ae"))
          ("AdobeIllustrator" . ,(all-the-icons-fileicon "ai"))
          ("AdobeInDesign" . ,(all-the-icons-fileicon "id"))
          ("Blender" . ,(all-the-icons-fileicon "blender"))
          ("Maya" . ,(all-the-icons-fileicon "maya"))
          ;; ("CAD" . ,(all-the-icons-fileicon "kicad"))
          ("CAD" . ,(all-the-icons-fileicon "openscad"))
          ("Labview" . ,(all-the-icons-fileicon "labview"))
          ("Audacity" . ,(all-the-icons-fileicon "audacity"))
          ("Sketch" . ,(all-the-icons-fileicon "sketch"))
          ("Sketchup" . ,(all-the-icons-fileicon "sketchup-layout"))
          ("paint" . ,(all-the-icons-faicon "paint-brush"))
          ("AutoIt" . ,(all-the-icons-fileicon "autoit"))
          ("AutoHotKey" . ,(all-the-icons-fileicon "auto-hotkey"))
          ;; -----------------------------------------------------
          ;; Systems
          ("Linux" . ,(all-the-icons-faicon "linux"))
          ("ArchLinux" . ,(all-the-icons-fileicon "arch-linux"))
          ("Gentoo" . ,(all-the-icons-fileicon "gentoo"))
          ("Alpine" . ,(all-the-icons-fileicon "alpine-linux"))
          ("Apple" . ,(all-the-icons-faicon "apple"))
          ("macOS" . ,(all-the-icons-faicon "apple"))
          ("Windows" . ,(all-the-icons-faicon "windows"))
          ("Android" . ,(all-the-icons-faicon "android"))
          ("VirtualBox" . ,(all-the-icons-fileicon "virtualbox"))
          ("VMWare" . ,(all-the-icons-fileicon "vmware"))
          ("man" . ,(all-the-icons-fileicon "man-page"))
          ("config" . ,(all-the-icons-fileicon "config"))
          ;; -----------------------------------------------------
          ;; Programming Languages
          ("Shell" . ,(all-the-icons-alltheicon "script"))
          ("LISP" . ,(all-the-icons-fileicon "lisp"))
          ("Common_Lisp" . ,(all-the-icons-fileicon "clisp"))
          ("Clojure" . ,(all-the-icons-alltheicon "clojure-line" :v-adjust -0.05))
          ("ClojureScript" . ,(all-the-icons-fileicon "cljs" :v-adjust -0.01))
          ("Scheme" . ,(all-the-icons-fileicon "scheme"))
          ("Racket" . ,(all-the-icons-fileicon "racket"))
          ("EmacsLisp" . ,(all-the-icons-fileicon "elisp"))
          ("Python" . ,(all-the-icons-alltheicon "python"))
          ("Cython" . ,(all-the-icons-fileicon "cython"))
          ("Haskell" . ,(all-the-icons-alltheicon "haskell"))
          ("Julia" . ,(all-the-icons-fileicon "julia"))
          ("C" . ,(all-the-icons-alltheicon "c-line"))
          ("cpp" . ,(all-the-icons-alltheicon "cplusplus-line"))
          ("C#" . ,(all-the-icons-alltheicon "csharp-line"))
          ;; ("C#" . ,(all-the-icons-fileicon "cs-script"))
          ("nuget" . ,(all-the-icons-fileicon "nuget"))
          ("Java" . ,(all-the-icons-alltheicon "java"))
          ("Gradle" . ,(all-the-icons-fileicon "gradle"))
          ("Groovy" . ,(all-the-icons-fileicon "groovy"))
          ;; ("Scala" . ,(all-the-icons-fileicon ""))
          ("Kotlin" . ,(all-the-icons-fileicon "kotlin"))
          ("Go" . ,(all-the-icons-fileicon "go"))
          ("Rust" . ,(all-the-icons-alltheicon "rust"))
          ("Swift" . ,(all-the-icons-alltheicon "swift"))
          ("R" . ,(all-the-icons-fileicon "R"))
          ("Octave" . ,(all-the-icons-fileicon "octave"))
          ("Matlab" . ,(all-the-icons-fileicon "matlab"))
          ("Mathematica" . ,(all-the-icons-fileicon "mathematica"))
          ("Sage" . ,(all-the-icons-fileicon "sage"))
          ("Delphi" . ,(all-the-icons-fileicon "delphi"))
          ("OCaml" . ,(all-the-icons-fileicon "ocaml"))
          ("Fortran" . ,(all-the-icons-fileicon "fortran"))
          ("Coq" . ,(all-the-icons-fileicon "coq"))
          ;; ("Ruby" . ,(all-the-icons-fileicon "ruby"))
          ("MRuby" . ,(all-the-icons-fileicon "mruby"))
          ("RDoc" . ,(all-the-icons-fileicon "rdoc"))
          ("PHP" . ,(all-the-icons-fileicon "php"))
          ;; ("Perl" . ,(all-the-icons-fileicon ""))
          ("CPAN" . ,(all-the-icons-fileicon "cpan"))
          ("Lua" . ,(all-the-icons-fileicon "lua"))
          ("Io" . ,(all-the-icons-fileicon "io"))
          ("JavaScript" . ,(all-the-icons-alltheicon "javascript"))
          ("nodejs" . ,(all-the-icons-alltheicon "nodejs"))
          ("npm" . ,(all-the-icons-fileicon "npm-old"))
          ("TypeScript" . ,(all-the-icons-fileicon "typescript"))
          ("tsx" . ,(all-the-icons-fileicon "tsx"))
          ("jsx" . ,(all-the-icons-fileicon "jsx-2"))
          ("WebAssembly" . ,(all-the-icons-fileicon "wasm"))
          ("HTML" . ,(all-the-icons-alltheicon "html5"))
          ("HTML5" . ,(all-the-icons-alltheicon "html5"))
          ("CSS" . ,(all-the-icons-alltheicon "css3"))
          ("CSS3" . ,(all-the-icons-alltheicon "css3"))
          ("SQL" . ,(all-the-icons-faicon "database"))
          ("SQLite" . ,(all-the-icons-fileicon "sqlite"))
          ("PostgreSQL" . ,(all-the-icons-alltheicon "postgresql"))
          ("Firebase" . ,(all-the-icons-fileicon "firebase"))
          ("TeX" . ,(all-the-icons-fileicon "tex"))
          ("MathJax" . ,(all-the-icons-fileicon "mathjax"))
          ("Shen" . ,(all-the-icons-fileicon "shen"))
          ("Hacklang" . ,(all-the-icons-fileicon "hack"))
          ("VHDL" . ,(all-the-icons-fileicon "vhdl"))
          ("Verilog" . ,(all-the-icons-fileicon "verilog"))
          ("LaTeX" . ,(all-the-icons-fileicon "tex"))
          ("Spring" . ,(all-the-icons-alltheicon "spring"))
          ("Redux" . ,(all-the-icons-fileicon "redux"))
          ("AWS" . ,(all-the-icons-alltheicon "aws"))
          ("Kivy" . ,(all-the-icons-fileicon "kivy"))
          ;; ("JSON" . ,(all-the-icons-fileicon "json"))
          ("GraphQL" . ,(all-the-icons-fileicon "graphql"))
          ("OpenGL" . ,(all-the-icons-fileicon "opengl"))
          ("OpenCL" . ,(all-the-icons-fileicon "opencl"))
          ("WebGL" . ,(all-the-icons-fileicon "webgl"))
          ("Boot" . ,(all-the-icons-fileicon "build-boot"))
          ("bundler" . ,(all-the-icons-fileicon "bundler"))
          ("Graphviz" . ,(all-the-icons-fileicon "graphviz"))
          ("dylib" . ,(all-the-icons-fileicon "dylib"))
          ("V8" . ,(all-the-icons-fileicon "v8"))
          ("webpack" . ,(all-the-icons-fileicon "webpack-old"))
          ("Grunt" . ,(all-the-icons-fileicon "grunt"))
          ("Gulp" . ,(all-the-icons-fileicon "gulp"))
          ("vue" . ,(all-the-icons-fileicon "vue"))
          ("reason" . ,(all-the-icons-fileicon "reason"))
          ("d3js" . ,(all-the-icons-fileicon "d3"))
          ("chartjs" . ,(all-the-icons-fileicon "chartjs"))
          ("hoplon" . ,(all-the-icons-fileicon "hoplon"))
          ("Solidity" . ,(all-the-icons-fileicon "solidity"))
          ;; -----------------------------------------------------
          ;; Testing
          ;; ("" . ,(all-the-icons-fileicon "test-dir"))
          ;; ("" . ,(all-the-icons-fileicon "test-genertic"))
          ;; ("" . ,(all-the-icons-fileicon "test-js"))
          ;; ("" . ,(all-the-icons-fileicon "test-typescript"))
          ;; ("" . ,(all-the-icons-fileicon "test-coffeescript"))
          ;; ("" . ,(all-the-icons-fileicon "test-react"))
          ;; ("" . ,(all-the-icons-fileicon "test-python"))
          ;; ("" . ,(all-the-icons-fileicon "test-ruby"))
          ;; ("" . ,(all-the-icons-fileicon "test-perl"))
          ;; ("" . ,(all-the-icons-fileicon "phpunit"))
          ;; -----------------------------------------------------
          ;; Open Source
          ("GNU" . ,(all-the-icons-fileicon "gnu"))
          ("free" . ,(all-the-icons-fileicon "freemarker"))
          ("copyright" . ,(all-the-icons-faicon "copyright"))
          ("registered" . ,(all-the-icons-faicon "registered"))
          ("CC" . ,(all-the-icons-faicon "cc"))
          ;; -----------------------------------------------------
          ;; Project
          ("@project" . ,(all-the-icons-faicon "bolt"))
          ;; -----------------------------------------------------
          ;; Family
          ("@family" . ,(all-the-icons-material "home"))
          ;; -----------------------------------------------------
          ;; Company
          ("users" . ,(all-the-icons-faicon "users"))
          ("promotion" . ,(all-the-icons-faicon "bullhorn"))
          ;; -----------------------------------------------------
          ;; Internet
          ("Internet" . ,(all-the-icons-faicon "globe"))
          ("Google" . ,(all-the-icons-faicon "google"))
          ("Windows" . ,(all-the-icons-faicon "windows"))
          ("Microsoft" . ,(all-the-icons-faicon "windows"))
          ("Facebook" . ,(all-the-icons-faicon "facebook-official"))
          ("Twitter" . ,(all-the-icons-faicon "twitter"))
          ("Amazon" . ,(all-the-icons-faicon "amazon"))
          ("GitHub" . ,(all-the-icons-faicon "github"))
          ("GitLab" . ,(all-the-icons-fileicon "gitlab"))
          ("hacker_news" . ,(all-the-icons-faicon "hacker-news"))
          ("stack_exchange" . ,(all-the-icons-faicon "stack-exchange"))
          ("stack_overflow" . ,(all-the-icons-faicon "stack-overflow"))
          ("Wikipedia" . ,(all-the-icons-faicon "wikipedia-w"))
          ("YouTube" . ,(all-the-icons-faicon "youtube-square"))
          ("Tencent" . ,(all-the-icons-faicon "qq"))
          ("QQ" . ,(all-the-icons-faicon "qq"))
          ("weixin" . ,(all-the-icons-faicon "weixin"))
          ("weibo" . ,(all-the-icons-faicon "weibo"))
          ("whatsapp" . ,(all-the-icons-faicon "whatsapp"))
          ;; Investing & Finance
          ("finance" . ,(all-the-icons-faicon "money"))
          ("stock" . ,(all-the-icons-faicon "money"))
          ;; philosophy
          ("daoism" . ,(all-the-icons-fileicon "yin-yang"))
          ("tree" . ,(all-the-icons-fileicon "devicetree"))
          ("empire" . ,(all-the-icons-faicon "empire"))
          ;; Finance
          ("digital_currency" . ,(all-the-icons-faicon "btc"))
          ("btc" . ,(all-the-icons-faicon "btc"))
          )))


(provide 'init-org-tag)

;;; init-org-tag.el ends here
